// Generated by view binder compiler. Do not edit!
package com.example.moviehub.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.moviehub.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAccountBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView accountPh;

  @NonNull
  public final TextView accountTitolo;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final TextView impostazioni;

  @NonNull
  public final TextView impostazioniTitolo;

  @NonNull
  public final Button logoutBtn;

  @NonNull
  public final TextView username;

  private FragmentAccountBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView accountPh,
      @NonNull TextView accountTitolo, @NonNull ConstraintLayout constraintLayout,
      @NonNull TextView impostazioni, @NonNull TextView impostazioniTitolo,
      @NonNull Button logoutBtn, @NonNull TextView username) {
    this.rootView = rootView;
    this.accountPh = accountPh;
    this.accountTitolo = accountTitolo;
    this.constraintLayout = constraintLayout;
    this.impostazioni = impostazioni;
    this.impostazioniTitolo = impostazioniTitolo;
    this.logoutBtn = logoutBtn;
    this.username = username;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAccountBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAccountBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_account, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAccountBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.accountPh;
      ImageView accountPh = ViewBindings.findChildViewById(rootView, id);
      if (accountPh == null) {
        break missingId;
      }

      id = R.id.accountTitolo;
      TextView accountTitolo = ViewBindings.findChildViewById(rootView, id);
      if (accountTitolo == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.impostazioni;
      TextView impostazioni = ViewBindings.findChildViewById(rootView, id);
      if (impostazioni == null) {
        break missingId;
      }

      id = R.id.impostazioniTitolo;
      TextView impostazioniTitolo = ViewBindings.findChildViewById(rootView, id);
      if (impostazioniTitolo == null) {
        break missingId;
      }

      id = R.id.logoutBtn;
      Button logoutBtn = ViewBindings.findChildViewById(rootView, id);
      if (logoutBtn == null) {
        break missingId;
      }

      id = R.id.username;
      TextView username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      return new FragmentAccountBinding((ConstraintLayout) rootView, accountPh, accountTitolo,
          constraintLayout, impostazioni, impostazioniTitolo, logoutBtn, username);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
